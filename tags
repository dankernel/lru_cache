!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CACHE_BLOCK_SIZE	dkh/lru.c	39;"	d	file:
CACHE_LEN	dkh/lru.c	41;"	d	file:
CACHE_SIZE	dkh/lru.c	40;"	d	file:
DEBUG_OPTION	dkh/lru.c	43;"	d	file:
EARG_NULL	dkh/errno.h	3;"	d
GB	dkh/lru.c	36;"	d	file:
GOLDEN_RATIO_PRIME_32	dkh/hash.h	24;"	d
HLIST_HEAD	dkh/list.h	684;"	d
HLIST_HEAD_INIT	dkh/list.h	683;"	d
INIT_HLIST_HEAD	dkh/list.h	685;"	d
INIT_HLIST_NODE	dkh/list.h	/^static inline void INIT_HLIST_NODE(struct hlist_node *h)$/;"	f
INIT_LIST_HEAD	dkh/list.h	/^static inline void INIT_LIST_HEAD(struct list_head *list)$/;"	f
KB	dkh/lru.c	34;"	d	file:
LIST_HEAD	dkh/list.h	27;"	d
LIST_HEAD_INIT	dkh/list.h	25;"	d
LRU_cache	dkh/lru.c	/^int LRU_cache(struct cache_mem *cm, long long line)$/;"	f
LRU_lookup	dkh/lru.c	/^static inline struct cache_line *LRU_lookup(struct cache_mem *cm, long long line)$/;"	f	file:
MB	dkh/lru.c	35;"	d	file:
READ	dkh/lru.c	30;"	d	file:
RELOC_HIDE	dkh/compiler.h	69;"	d
WRITE	dkh/lru.c	31;"	d	file:
_LINUX_LIST_H	dkh/list.h	2;"	d
__LINUX_COMPILER_H	dkh/compiler.h	2;"	d
__acquire	dkh/compiler.h	15;"	d
__acquire	dkh/compiler.h	32;"	d
__acquires	dkh/compiler.h	13;"	d
__acquires	dkh/compiler.h	30;"	d
__always_inline	dkh/compiler.h	154;"	d
__attribute_const__	dkh/compiler.h	174;"	d
__attribute_pure__	dkh/compiler.h	146;"	d
__attribute_used__	dkh/compiler.h	124;"	d
__builtin_warning	dkh/compiler.h	29;"	d
__chk_io_ptr	dkh/compiler.h	28;"	d
__chk_user_ptr	dkh/compiler.h	27;"	d
__cold	dkh/compiler.h	183;"	d
__cond_lock	dkh/compiler.h	17;"	d
__cond_lock	dkh/compiler.h	34;"	d
__deprecated	dkh/compiler.h	87;"	d
__deprecated_for_modules	dkh/compiler.h	91;"	d
__deprecated_for_modules	dkh/compiler.h	93;"	d
__force	dkh/compiler.h	10;"	d
__force	dkh/compiler.h	24;"	d
__hlist_del	dkh/list.h	/^static inline void __hlist_del(struct hlist_node *n)$/;"	f
__iomem	dkh/compiler.h	12;"	d
__iomem	dkh/compiler.h	26;"	d
__kernel	dkh/compiler.h	22;"	d
__kernel	dkh/compiler.h	8;"	d
__list_add	dkh/dk_list.h	/^static inline void __list_add(struct list_head *new,$/;"	f
__list_add	dkh/list.h	/^static inline void __list_add(struct list_head *new,$/;"	f
__list_add_rcu	dkh/list.h	/^static inline void __list_add_rcu(struct list_head * new,$/;"	f
__list_del	dkh/dk_list.h	/^static inline void __list_del(struct list_head *prev, struct list_head *next)$/;"	f
__list_del	dkh/list.h	/^static inline void __list_del(struct list_head * prev, struct list_head * next)$/;"	f
__list_for_each	dkh/list.h	458;"	d
__list_for_each_rcu	dkh/list.h	613;"	d
__list_splice	dkh/list.h	/^static inline void __list_splice(struct list_head *list,$/;"	f
__maybe_unused	dkh/compiler.h	132;"	d
__must_check	dkh/compiler.h	101;"	d
__must_check	dkh/compiler.h	102;"	d
__must_check	dkh/compiler.h	97;"	d
__nocast	dkh/compiler.h	11;"	d
__nocast	dkh/compiler.h	25;"	d
__release	dkh/compiler.h	16;"	d
__release	dkh/compiler.h	33;"	d
__releases	dkh/compiler.h	14;"	d
__releases	dkh/compiler.h	31;"	d
__safe	dkh/compiler.h	23;"	d
__safe	dkh/compiler.h	9;"	d
__used	dkh/compiler.h	128;"	d
__user	dkh/compiler.h	21;"	d
__user	dkh/compiler.h	7;"	d
add_hash_table	dkh/hash.h	/^int add_hash_table(struct hash_table *ht, unsigned int val)$/;"	f
barrier	dkh/compiler.h	65;"	d
bucket	dkh/lru.c	/^  struct list_head *bucket;$/;"	m	struct:lru_hash	typeref:struct:lru_hash::list_head	file:
cache_line	dkh/lru.c	/^struct cache_line$/;"	s	file:
cache_mem	dkh/lru.c	/^struct cache_mem$/;"	s	file:
container_of	dkh/dk_list.h	29;"	d
create_line	dkh/lru.c	/^static struct cache_line *create_line(long long line)$/;"	f	file:
del_cm	dkh/lru.c	/^int del_cm(struct cache_mem *cm)$/;"	f
disk_num	dkh/lru.c	/^  int disk_num;$/;"	m	struct:workload	file:
dk_list	dkh/dk_list.h	25;"	d
err_test	dkh/print_msg.h	24;"	d
first	dkh/list.h	/^	struct hlist_node *first;$/;"	m	struct:hlist_head	typeref:struct:hlist_head::hlist_node
hash	dkh/lru.c	/^  struct list_head hash;$/;"	m	struct:cache_line	typeref:struct:cache_line::list_head	file:
hash	dkh/lru.c	/^  struct lru_hash hash;$/;"	m	struct:cache_mem	typeref:struct:cache_mem::lru_hash	file:
hash_64	dkh/hash.h	/^static __always_inline unsigned int hash_64(unsigned int val, unsigned int bits)$/;"	f
hash_insert	dkh/lru.c	/^void hash_insert(struct cache_mem *cm, struct cache_line *l)$/;"	f
hash_row	dkh/hash.h	/^struct hash_row$/;"	s
hash_table	dkh/hash.h	/^struct hash_table$/;"	s
head	dkh/hash.h	/^  struct list_head head;$/;"	m	struct:hash_row	typeref:struct:hash_row::list_head
head	dkh/lru.c	/^  struct list_head head;$/;"	m	struct:cache_line	typeref:struct:cache_line::list_head	file:
hit	dkh/lru.c	/^  long hit;$/;"	m	struct:cache_mem	file:
hlist_add_after	dkh/list.h	/^static inline void hlist_add_after(struct hlist_node *n,$/;"	f
hlist_add_after_rcu	dkh/list.h	/^static inline void hlist_add_after_rcu(struct hlist_node *prev,$/;"	f
hlist_add_before	dkh/list.h	/^static inline void hlist_add_before(struct hlist_node *n,$/;"	f
hlist_add_before_rcu	dkh/list.h	/^static inline void hlist_add_before_rcu(struct hlist_node *n,$/;"	f
hlist_add_head	dkh/list.h	/^static inline void hlist_add_head(struct hlist_node *n, struct hlist_head *h)$/;"	f
hlist_add_head_rcu	dkh/list.h	/^static inline void hlist_add_head_rcu(struct hlist_node *n,$/;"	f
hlist_del	dkh/list.h	/^static inline void hlist_del(struct hlist_node *n)$/;"	f
hlist_del_init	dkh/list.h	/^static inline void hlist_del_init(struct hlist_node *n)$/;"	f
hlist_del_rcu	dkh/list.h	/^static inline void hlist_del_rcu(struct hlist_node *n)$/;"	f
hlist_empty	dkh/list.h	/^static inline int hlist_empty(const struct hlist_head *h)$/;"	f
hlist_entry	dkh/list.h	892;"	d
hlist_for_each	dkh/list.h	894;"	d
hlist_for_each_entry	dkh/list.h	909;"	d
hlist_for_each_entry_continue	dkh/list.h	921;"	d
hlist_for_each_entry_from	dkh/list.h	933;"	d
hlist_for_each_entry_rcu	dkh/list.h	963;"	d
hlist_for_each_entry_safe	dkh/list.h	946;"	d
hlist_for_each_safe	dkh/list.h	898;"	d
hlist_head	dkh/list.h	/^struct hlist_head {$/;"	s
hlist_node	dkh/list.h	/^struct hlist_node {$/;"	s
hlist_replace_rcu	dkh/list.h	/^static inline void hlist_replace_rcu(struct hlist_node *old,$/;"	f
hlist_unhashed	dkh/list.h	/^static inline int hlist_unhashed(const struct hlist_node *h)$/;"	f
host	dkh/lru.c	/^  char *host;$/;"	m	struct:workload	file:
init_cache_mem	dkh/lru.c	/^struct cache_mem *init_cache_mem(unsigned long size)$/;"	f
init_hash	dkh/hash.h	/^struct hash_table *init_hash(int len)$/;"	f
init_hash_list	dkh/lru.c	/^int init_hash_list(struct cache_mem *cm, unsigned long s)$/;"	f
init_list	dkh/dk_list.h	/^static inline void init_list(struct list_head *head)$/;"	f
init_lnode	dkh/dk_list.h	/^struct list_head *init_lnode()$/;"	f
len	dkh/hash.h	/^  int len;$/;"	m	struct:hash_table
likely	dkh/compiler.h	60;"	d
line	dkh/lru.c	/^  long line;$/;"	m	struct:cache_line	file:
list	dkh/lru.c	/^  struct list_head *list;$/;"	m	struct:cache_mem	typeref:struct:cache_mem::list_head	file:
list_add	dkh/dk_list.h	/^static inline void list_add(struct list_head *new, struct list_head *head)$/;"	f
list_add	dkh/list.h	/^static inline void list_add(struct list_head *new, struct list_head *head)$/;"	f
list_add_rcu	dkh/list.h	/^static inline void list_add_rcu(struct list_head *new, struct list_head *head)$/;"	f
list_add_tail	dkh/list.h	/^static inline void list_add_tail(struct list_head *new, struct list_head *head)$/;"	f
list_add_tail_rcu	dkh/list.h	/^static inline void list_add_tail_rcu(struct list_head *new,$/;"	f
list_del	dkh/dk_list.h	/^static inline void list_del(struct list_head *entry)$/;"	f
list_del	dkh/list.h	/^static inline void list_del(struct list_head *entry)$/;"	f
list_del_init	dkh/list.h	/^static inline void list_del_init(struct list_head *entry)$/;"	f
list_del_rcu	dkh/list.h	/^static inline void list_del_rcu(struct list_head *entry)$/;"	f
list_each	dkh/lru.c	26;"	d	file:
list_empty	dkh/list.h	/^static inline int list_empty(const struct list_head *head)$/;"	f
list_empty_careful	dkh/list.h	/^static inline int list_empty_careful(const struct list_head *head)$/;"	f
list_entry	dkh/list.h	425;"	d
list_entry	dkh/lru.c	23;"	d	file:
list_first_entry	dkh/list.h	436;"	d
list_for_each	dkh/dk_list.h	33;"	d
list_for_each	dkh/list.h	444;"	d
list_for_each_continue_rcu	dkh/list.h	663;"	d
list_for_each_entry	dkh/list.h	486;"	d
list_for_each_entry_continue	dkh/list.h	522;"	d
list_for_each_entry_from	dkh/list.h	535;"	d
list_for_each_entry_rcu	dkh/list.h	645;"	d
list_for_each_entry_reverse	dkh/list.h	497;"	d
list_for_each_entry_safe	dkh/list.h	546;"	d
list_for_each_entry_safe_continue	dkh/list.h	562;"	d
list_for_each_entry_safe_from	dkh/list.h	578;"	d
list_for_each_entry_safe_reverse	dkh/list.h	593;"	d
list_for_each_prev	dkh/list.h	466;"	d
list_for_each_rcu	dkh/list.h	608;"	d
list_for_each_safe	dkh/list.h	476;"	d
list_for_each_safe_rcu	dkh/list.h	630;"	d
list_head	dkh/dk_list.h	/^struct list_head$/;"	s
list_head	dkh/list.h	/^struct list_head {$/;"	s
list_insert	dkh/dk_list.h	/^static inline void list_insert(struct list_head *list, struct list_head *prev, struct list_head *next)$/;"	f
list_is_last	dkh/list.h	/^static inline int list_is_last(const struct list_head *list,$/;"	f
list_move	dkh/dk_list.h	/^static inline void list_move(struct list_head *list, struct list_head *head)$/;"	f
list_move	dkh/list.h	/^static inline void list_move(struct list_head *list, struct list_head *head)$/;"	f
list_move_tail	dkh/list.h	/^static inline void list_move_tail(struct list_head *list,$/;"	f
list_prepare_entry	dkh/list.h	510;"	d
list_prepend	dkh/dk_list.h	/^static inline void list_prepend(struct list_head *head, struct list_head *list)$/;"	f
list_remove	dkh/dk_list.h	/^static inline void list_remove(struct list_head *head)$/;"	f
list_replace	dkh/dk_list.h	/^static inline void list_replace(struct list_head *old, struct list_head *new)$/;"	f
list_replace	dkh/list.h	/^static inline void list_replace(struct list_head *old,$/;"	f
list_replace_init	dkh/list.h	/^static inline void list_replace_init(struct list_head *old,$/;"	f
list_replace_rcu	dkh/list.h	/^static inline void list_replace_rcu(struct list_head *old,$/;"	f
list_splice	dkh/dk_list.h	/^static inline void list_splice(struct list_head *prev, struct list_head *next)$/;"	f
list_splice	dkh/list.h	/^static inline void list_splice(struct list_head *list, struct list_head *head)$/;"	f
list_splice_init	dkh/list.h	/^static inline void list_splice_init(struct list_head *list,$/;"	f
list_splice_init_rcu	dkh/list.h	/^static inline void list_splice_init_rcu(struct list_head *list,$/;"	f
lookup_hash	dkh/hash.h	/^int lookup_hash(struct hash_table *ht)$/;"	f
lru_hash	dkh/lru.c	/^struct lru_hash$/;"	s	file:
main	main.c	/^int main(int argc, char *argv[]){$/;"	f
max	dkh/lru.c	/^  long max;$/;"	m	struct:cache_mem	file:
next	dkh/dk_list.h	/^  struct list_head *next;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
next	dkh/list.h	/^	struct hlist_node *next, **pprev;$/;"	m	struct:hlist_node	typeref:struct:hlist_node::hlist_node
next	dkh/list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
noinline	dkh/compiler.h	150;"	d
offset	dkh/lru.c	/^  unsigned long long offset;$/;"	m	struct:workload	file:
offsetof	dkh/dk_list.h	27;"	d
open_workload	dkh/lru.c	/^FILE *open_workload(char *file)$/;"	f
p	dkh/hash.h	/^  void *p;$/;"	m	struct:hash_row
pprev	dkh/list.h	/^	struct hlist_node *next, **pprev;$/;"	m	struct:hlist_node	typeref:struct:hlist_node::
prev	dkh/dk_list.h	/^  struct list_head *prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
prev	dkh/list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::
print_cm	dkh/lru.c	/^int print_cm(struct cache_mem *cm)$/;"	f
print_f	dkh/print_msg.h	20;"	d
print_o	dkh/print_msg.h	21;"	d
read	dkh/lru.c	/^  long read;$/;"	m	struct:cache_mem	file:
read_column	dkh/lru.c	/^int read_column(struct workload *wl, char *buf)$/;"	f
read_workload	dkh/lru.c	/^int read_workload(FILE *fp, long cache_size)$/;"	f
report_cm	dkh/lru.c	/^void report_cm(struct cache_mem *cm)$/;"	f
respone	dkh/lru.c	/^  long respone; \/\/respones time$/;"	m	struct:workload	file:
row	dkh/hash.h	/^  struct hash_row *row;$/;"	m	struct:hash_table	typeref:struct:hash_table::hash_row
run_cache	dkh/lru.c	/^int run_cache(struct cache_mem *cm, struct workload *wl)$/;"	f
size	dkh/lru.c	/^  long long size;$/;"	m	struct:lru_hash	file:
size	dkh/lru.c	/^  long size;$/;"	m	struct:cache_mem	file:
size	dkh/lru.c	/^  long size;$/;"	m	struct:workload	file:
time	dkh/lru.c	/^  char *time;$/;"	m	struct:workload	file:
type	dkh/lru.c	/^  int type;$/;"	m	struct:workload	file:
unlikely	dkh/compiler.h	61;"	d
workload	dkh/lru.c	/^struct workload$/;"	s	file:
write	dkh/lru.c	/^  long write;$/;"	m	struct:cache_mem	file:
